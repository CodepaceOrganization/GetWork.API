<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoGeneratedRunConfigurationManager">
    <projectFile profileName="IIS Express">CodePace.GetWork.API/CodePace.GetWork.API.csproj</projectFile>
    <projectFile profileName="http">CodePace.GetWork.API/CodePace.GetWork.API.csproj</projectFile>
    <projectFile profileName="https">CodePace.GetWork.API/CodePace.GetWork.API.csproj</projectFile>
  </component>
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="5c5cd8cd-b82c-4cda-b991-68e1ac01984b" name="Changes" comment="">
      <change beforePath="$PROJECT_DIR$/.idea/.idea.get-work-platform/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/.idea.get-work-platform/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/CodePace.GetWork.API/IAM/Infrastructure/Pipeline/Middleware/Components/RequestAuthorizationMiddleware.cs" beforeDir="false" afterPath="$PROJECT_DIR$/CodePace.GetWork.API/IAM/Infrastructure/Pipeline/Middleware/Components/RequestAuthorizationMiddleware.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/CodePace.GetWork.API/Program.cs" beforeDir="false" afterPath="$PROJECT_DIR$/CodePace.GetWork.API/Program.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/CodePace.GetWork.API/TechnicalEvaluation/Application/Internal/CommandServices/TechnicalTaskCommandService.cs" beforeDir="false" afterPath="$PROJECT_DIR$/CodePace.GetWork.API/TechnicalEvaluation/Application/Internal/CommandServices/TechnicalTaskCommandService.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/CodePace.GetWork.API/TechnicalEvaluation/Application/Internal/QueryServices/TechnicalTaskQueryService.cs" beforeDir="false" afterPath="$PROJECT_DIR$/CodePace.GetWork.API/TechnicalEvaluation/Application/Internal/QueryServices/TechnicalTaskQueryService.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/CodePace.GetWork.API/TechnicalEvaluation/Domain/Model/Entities/TechnicalTask.cs" beforeDir="false" afterPath="$PROJECT_DIR$/CodePace.GetWork.API/TechnicalEvaluation/Domain/Model/Entities/TechnicalTask.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/CodePace.GetWork.API/TechnicalEvaluation/Domain/Repositories/ITechnicalTaskRepository.cs" beforeDir="false" afterPath="$PROJECT_DIR$/CodePace.GetWork.API/TechnicalEvaluation/Domain/Repositories/ITechnicalTaskRepository.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/CodePace.GetWork.API/TechnicalEvaluation/Domain/Services/ITechnicalTaskQueryService.cs" beforeDir="false" afterPath="$PROJECT_DIR$/CodePace.GetWork.API/TechnicalEvaluation/Domain/Services/ITechnicalTaskQueryService.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/CodePace.GetWork.API/TechnicalEvaluation/Infrastructure/Persistence/EFC/Repositories/TechnicalTaskRepository.cs" beforeDir="false" afterPath="$PROJECT_DIR$/CodePace.GetWork.API/TechnicalEvaluation/Infrastructure/Persistence/EFC/Repositories/TechnicalTaskRepository.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/CodePace.GetWork.API/TechnicalEvaluation/Interfaces/REST/Resources/TechnicalTaskResource.cs" beforeDir="false" afterPath="$PROJECT_DIR$/CodePace.GetWork.API/TechnicalEvaluation/Interfaces/REST/Resources/TechnicalTaskResource.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/CodePace.GetWork.API/TechnicalEvaluation/Interfaces/REST/TechnicalTaskController.cs" beforeDir="false" afterPath="$PROJECT_DIR$/CodePace.GetWork.API/TechnicalEvaluation/Interfaces/REST/TechnicalTaskController.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/CodePace.GetWork.API/TechnicalEvaluation/Interfaces/REST/TechnicalTestController.cs" beforeDir="false" afterPath="$PROJECT_DIR$/CodePace.GetWork.API/TechnicalEvaluation/Interfaces/REST/TechnicalTestController.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/CodePace.GetWork.API/TechnicalEvaluation/Interfaces/REST/Transform/TechnicalTaskResourceFromEntityAssembler.cs" beforeDir="false" afterPath="$PROJECT_DIR$/CodePace.GetWork.API/TechnicalEvaluation/Interfaces/REST/Transform/TechnicalTaskResourceFromEntityAssembler.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/CodePace.GetWork.API/appsettings.Development.json" beforeDir="false" afterPath="$PROJECT_DIR$/CodePace.GetWork.API/appsettings.Development.json" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/CodePace.GetWork.API/contest/Application/Internal/CommandServices/ContestCommandService.cs" beforeDir="false" afterPath="$PROJECT_DIR$/CodePace.GetWork.API/Contest/Application/Internal/CommandServices/ContestCommandService.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/CodePace.GetWork.API/contest/Application/Internal/QueryServices/ContestQueryService.cs" beforeDir="false" afterPath="$PROJECT_DIR$/CodePace.GetWork.API/Contest/Application/Internal/QueryServices/ContestQueryService.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/CodePace.GetWork.API/contest/Domain/Model/Aggregates/Contest.cs" beforeDir="false" afterPath="$PROJECT_DIR$/CodePace.GetWork.API/Contest/Domain/Model/Aggregates/Contest.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/CodePace.GetWork.API/contest/Domain/Model/Commands/CreateWeeklyContestCommand.cs" beforeDir="false" afterPath="$PROJECT_DIR$/CodePace.GetWork.API/Contest/Domain/Model/Commands/CreateWeeklyContestCommand.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/CodePace.GetWork.API/contest/Domain/Model/Commands/UpdateWeeklyContestCommand.cs" beforeDir="false" afterPath="$PROJECT_DIR$/CodePace.GetWork.API/Contest/Domain/Model/Commands/UpdateWeeklyContestCommand.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/CodePace.GetWork.API/contest/Domain/Model/Entities/Asset.cs" beforeDir="false" afterPath="$PROJECT_DIR$/CodePace.GetWork.API/Contest/Domain/Model/Entities/Asset.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/CodePace.GetWork.API/contest/Domain/Model/Entities/GetWorkAssetIdentifier.cs" beforeDir="false" afterPath="$PROJECT_DIR$/CodePace.GetWork.API/Contest/Domain/Model/Entities/GetWorkAssetIdentifier.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/CodePace.GetWork.API/contest/Domain/Model/Entities/ImageAssetContest.cs" beforeDir="false" afterPath="$PROJECT_DIR$/CodePace.GetWork.API/Contest/Domain/Model/Entities/ImageAssetContest.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/CodePace.GetWork.API/contest/Domain/Model/Entities/WeeklyContest.cs" beforeDir="false" afterPath="$PROJECT_DIR$/CodePace.GetWork.API/Contest/Domain/Model/Entities/WeeklyContest.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/CodePace.GetWork.API/contest/Domain/Model/Queries/GetAllWeeklyContestQuery.cs" beforeDir="false" afterPath="$PROJECT_DIR$/CodePace.GetWork.API/Contest/Domain/Model/Queries/GetAllWeeklyContestQuery.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/CodePace.GetWork.API/contest/Domain/Model/Queries/GetWeeklyContestByIdQuery.cs" beforeDir="false" afterPath="$PROJECT_DIR$/CodePace.GetWork.API/Contest/Domain/Model/Queries/GetWeeklyContestByIdQuery.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/CodePace.GetWork.API/contest/Domain/Model/ValueObjects/Rating.cs" beforeDir="false" afterPath="$PROJECT_DIR$/CodePace.GetWork.API/Contest/Domain/Model/ValueObjects/Rating.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/CodePace.GetWork.API/contest/Domain/Repositories/IContestRepository.cs" beforeDir="false" afterPath="$PROJECT_DIR$/CodePace.GetWork.API/Contest/Domain/Repositories/IContestRepository.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/CodePace.GetWork.API/contest/Domain/Repositories/IWeeklyContestRepository.cs" beforeDir="false" afterPath="$PROJECT_DIR$/CodePace.GetWork.API/Contest/Domain/Repositories/IWeeklyContestRepository.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/CodePace.GetWork.API/contest/Domain/Services/IContestCommandService.cs" beforeDir="false" afterPath="$PROJECT_DIR$/CodePace.GetWork.API/Contest/Domain/Services/IContestCommandService.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/CodePace.GetWork.API/contest/Domain/Services/IContestQueryService.cs" beforeDir="false" afterPath="$PROJECT_DIR$/CodePace.GetWork.API/Contest/Domain/Services/IContestQueryService.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/CodePace.GetWork.API/contest/Infrastructure/Persistence/EFC/Repositories/ContestRepository.cs" beforeDir="false" afterPath="$PROJECT_DIR$/CodePace.GetWork.API/Contest/Infrastructure/Persistence/EFC/Repositories/ContestRepository.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/CodePace.GetWork.API/contest/Infrastructure/Persistence/EFC/Repositories/WeeklyContestRepository.cs" beforeDir="false" afterPath="$PROJECT_DIR$/CodePace.GetWork.API/Contest/Infrastructure/Persistence/EFC/Repositories/WeeklyContestRepository.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/CodePace.GetWork.API/contest/Interfaces/REST/ContestController.cs" beforeDir="false" afterPath="$PROJECT_DIR$/CodePace.GetWork.API/Contest/Interfaces/REST/ContestController.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/CodePace.GetWork.API/contest/Interfaces/REST/Resources/CreateWeeklyContestResource.cs" beforeDir="false" afterPath="$PROJECT_DIR$/CodePace.GetWork.API/Contest/Interfaces/REST/Resources/CreateWeeklyContestResource.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/CodePace.GetWork.API/contest/Interfaces/REST/Resources/UpdateWeeklyContestResource.cs" beforeDir="false" afterPath="$PROJECT_DIR$/CodePace.GetWork.API/Contest/Interfaces/REST/Resources/UpdateWeeklyContestResource.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/CodePace.GetWork.API/contest/Interfaces/REST/Resources/WeeklyContestResource.cs" beforeDir="false" afterPath="$PROJECT_DIR$/CodePace.GetWork.API/Contest/Interfaces/REST/Resources/WeeklyContestResource.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/CodePace.GetWork.API/contest/Interfaces/REST/Transform/CreateWeeklyContestCommandFromResourceAssembler.cs" beforeDir="false" afterPath="$PROJECT_DIR$/CodePace.GetWork.API/Contest/Interfaces/REST/Transform/CreateWeeklyContestCommandFromResourceAssembler.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/CodePace.GetWork.API/contest/Interfaces/REST/Transform/UpdateWeeklyContestCommandFromResourceAssembler.cs" beforeDir="false" afterPath="$PROJECT_DIR$/CodePace.GetWork.API/Contest/Interfaces/REST/Transform/UpdateWeeklyContestCommandFromResourceAssembler.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/CodePace.GetWork.API/contest/Interfaces/REST/Transform/WeeklyContestResourceFromEntityAssembler.cs" beforeDir="false" afterPath="$PROJECT_DIR$/CodePace.GetWork.API/Contest/Interfaces/REST/Transform/WeeklyContestResourceFromEntityAssembler.cs" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="DpaMonitoringSettings">
    <option name="autoShow" value="false" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="JSON File" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_BRANCH_BY_REPOSITORY">
      <map>
        <entry key="$PROJECT_DIR$" value="main" />
      </map>
    </option>
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="HighlightingSettingsPerFile">
    <setting file="mock://D:/UPC/Ciclo 5/Aplicaciones Web/Final/GetWorkBackend/CodePace.GetWork.API/Program.cs" root0="SKIP_HIGHLIGHTING" />
    <setting file="mock://D:/UPC/Ciclo 5/Aplicaciones Web/Final/GetWorkBackend/CodePace.GetWork.API/Program.cs" root0="SKIP_HIGHLIGHTING" />
  </component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 3
}</component>
  <component name="ProjectId" id="2iG3ZFDAahja4R4zStwcBnwYRh7" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    ".NET Launch Settings Profile.CodePace.GetWork.API: http.executor": "Run",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "git-widget-placeholder": "main",
    "node.js.detected.package.eslint": "true",
    "node.js.detected.package.tslint": "true",
    "node.js.selected.package.eslint": "(autodetect)",
    "node.js.selected.package.tslint": "(autodetect)",
    "nodejs_package_manager_path": "npm",
    "vue.rearranger.settings.migration": "true"
  },
  "keyToStringList": {
    "rider.external.source.directories": [
      "C:\\Users\\jairc\\AppData\\Roaming\\JetBrains\\Rider2024.1\\resharper-host\\DecompilerCache",
      "C:\\Users\\jairc\\AppData\\Roaming\\JetBrains\\Rider2024.1\\resharper-host\\SourcesCache",
      "C:\\Users\\jairc\\AppData\\Local\\Symbols\\src"
    ]
  }
}]]></component>
  <component name="RunManager" selected=".NET Launch Settings Profile.CodePace.GetWork.API: http">
    <configuration default="true" type="docker-deploy" factoryName="docker-compose.yml" temporary="true">
      <deployment type="docker-compose.yml">
        <settings />
      </deployment>
      <EXTENSION ID="com.jetbrains.rider.docker.debug" isFastModeEnabled="true" isSslEnabled="false" />
      <method v="2" />
    </configuration>
    <configuration default="true" type="docker-deploy" factoryName="dockerfile" temporary="true">
      <deployment type="dockerfile">
        <settings />
      </deployment>
      <EXTENSION ID="com.jetbrains.rider.docker.debug" isFastModeEnabled="true" isSslEnabled="false" />
      <method v="2" />
    </configuration>
    <configuration name="CodePace.GetWork.API: IIS Express" type="LaunchSettings" factoryName=".NET Launch Settings Profile">
      <option name="LAUNCH_PROFILE_PROJECT_FILE_PATH" value="$PROJECT_DIR$/CodePace.GetWork.API/CodePace.GetWork.API.csproj" />
      <option name="LAUNCH_PROFILE_TFM" value="net8.0" />
      <option name="LAUNCH_PROFILE_NAME" value="IIS Express" />
      <option name="USE_EXTERNAL_CONSOLE" value="0" />
      <option name="USE_MONO" value="0" />
      <option name="RUNTIME_ARGUMENTS" value="" />
      <option name="GENERATE_APPLICATIONHOST_CONFIG" value="1" />
      <option name="SHOW_IIS_EXPRESS_OUTPUT" value="0" />
      <option name="SEND_DEBUG_REQUEST" value="1" />
      <option name="ADDITIONAL_IIS_EXPRESS_ARGUMENTS" value="" />
      <method v="2">
        <option name="Build" />
      </method>
    </configuration>
    <configuration name="CodePace.GetWork.API: IIS Express" type="LaunchSettings" factoryName=".NET Launch Settings Profile">
      <option name="LAUNCH_PROFILE_PROJECT_FILE_PATH" value="$PROJECT_DIR$/CodePace.GetWork.API/CodePace.GetWork.API.csproj" />
      <option name="LAUNCH_PROFILE_TFM" value="net8.0" />
      <option name="LAUNCH_PROFILE_NAME" value="IIS Express" />
      <option name="USE_EXTERNAL_CONSOLE" value="0" />
      <option name="USE_MONO" value="0" />
      <option name="RUNTIME_ARGUMENTS" value="" />
      <option name="GENERATE_APPLICATIONHOST_CONFIG" value="1" />
      <option name="SHOW_IIS_EXPRESS_OUTPUT" value="0" />
      <option name="SEND_DEBUG_REQUEST" value="1" />
      <option name="ADDITIONAL_IIS_EXPRESS_ARGUMENTS" value="" />
      <method v="2">
        <option name="Build" />
      </method>
    </configuration>
    <configuration name="CodePace.GetWork.API: http" type="LaunchSettings" factoryName=".NET Launch Settings Profile">
      <option name="LAUNCH_PROFILE_PROJECT_FILE_PATH" value="$PROJECT_DIR$/CodePace.GetWork.API/CodePace.GetWork.API.csproj" />
      <option name="LAUNCH_PROFILE_TFM" value="net8.0" />
      <option name="LAUNCH_PROFILE_NAME" value="http" />
      <option name="USE_EXTERNAL_CONSOLE" value="0" />
      <option name="USE_MONO" value="0" />
      <option name="RUNTIME_ARGUMENTS" value="" />
      <option name="GENERATE_APPLICATIONHOST_CONFIG" value="1" />
      <option name="SHOW_IIS_EXPRESS_OUTPUT" value="0" />
      <option name="SEND_DEBUG_REQUEST" value="1" />
      <option name="ADDITIONAL_IIS_EXPRESS_ARGUMENTS" value="" />
      <method v="2">
        <option name="Build" />
      </method>
    </configuration>
    <configuration name="CodePace.GetWork.API: http" type="LaunchSettings" factoryName=".NET Launch Settings Profile">
      <option name="LAUNCH_PROFILE_PROJECT_FILE_PATH" value="$PROJECT_DIR$/CodePace.GetWork.API/CodePace.GetWork.API.csproj" />
      <option name="LAUNCH_PROFILE_TFM" value="net8.0" />
      <option name="LAUNCH_PROFILE_NAME" value="http" />
      <option name="USE_EXTERNAL_CONSOLE" value="0" />
      <option name="USE_MONO" value="0" />
      <option name="RUNTIME_ARGUMENTS" value="" />
      <option name="GENERATE_APPLICATIONHOST_CONFIG" value="1" />
      <option name="SHOW_IIS_EXPRESS_OUTPUT" value="0" />
      <option name="SEND_DEBUG_REQUEST" value="1" />
      <option name="ADDITIONAL_IIS_EXPRESS_ARGUMENTS" value="" />
      <method v="2">
        <option name="Build" />
      </method>
    </configuration>
    <configuration name="CodePace.GetWork.API: https" type="LaunchSettings" factoryName=".NET Launch Settings Profile">
      <option name="LAUNCH_PROFILE_PROJECT_FILE_PATH" value="$PROJECT_DIR$/CodePace.GetWork.API/CodePace.GetWork.API.csproj" />
      <option name="LAUNCH_PROFILE_TFM" value="net8.0" />
      <option name="LAUNCH_PROFILE_NAME" value="https" />
      <option name="USE_EXTERNAL_CONSOLE" value="0" />
      <option name="USE_MONO" value="0" />
      <option name="RUNTIME_ARGUMENTS" value="" />
      <option name="GENERATE_APPLICATIONHOST_CONFIG" value="1" />
      <option name="SHOW_IIS_EXPRESS_OUTPUT" value="0" />
      <option name="SEND_DEBUG_REQUEST" value="1" />
      <option name="ADDITIONAL_IIS_EXPRESS_ARGUMENTS" value="" />
      <method v="2">
        <option name="Build" />
      </method>
    </configuration>
    <configuration name="CodePace.GetWork.API: https" type="LaunchSettings" factoryName=".NET Launch Settings Profile">
      <option name="LAUNCH_PROFILE_PROJECT_FILE_PATH" value="$PROJECT_DIR$/CodePace.GetWork.API/CodePace.GetWork.API.csproj" />
      <option name="LAUNCH_PROFILE_TFM" value="net8.0" />
      <option name="LAUNCH_PROFILE_NAME" value="https" />
      <option name="USE_EXTERNAL_CONSOLE" value="0" />
      <option name="USE_MONO" value="0" />
      <option name="RUNTIME_ARGUMENTS" value="" />
      <option name="GENERATE_APPLICATIONHOST_CONFIG" value="1" />
      <option name="SHOW_IIS_EXPRESS_OUTPUT" value="0" />
      <option name="SEND_DEBUG_REQUEST" value="1" />
      <option name="ADDITIONAL_IIS_EXPRESS_ARGUMENTS" value="" />
      <method v="2">
        <option name="Build" />
      </method>
    </configuration>
    <configuration name="CodePace.GetWork.API/Dockerfile" type="docker-deploy" factoryName="dockerfile" server-name="Docker">
      <deployment type="dockerfile">
        <settings>
          <option name="imageTag" value="codepace.getwork.api" />
          <option name="containerName" value="codepace.getwork.api" />
          <option name="contextFolderPath" value="C:\Users\jairc\Desktop\Cosa\5to-Ciclo\Aplicaciones web\BACKEND VERDADERO\GetWorkBackend" />
          <option name="portBindings">
            <list>
              <DockerPortBindingImpl>
                <option name="containerPort" value="8080" />
                <option name="hostIp" value="127.0.0.1" />
                <option name="hostPort" value="8080" />
              </DockerPortBindingImpl>
            </list>
          </option>
          <option name="sourceFilePath" value="CodePace.GetWork.API/Dockerfile" />
        </settings>
      </deployment>
      <EXTENSION ID="com.jetbrains.rider.docker.debug" isFastModeEnabled="true" isSslEnabled="false" />
      <method v="2" />
    </configuration>
    <configuration name="CodePace.GetWork.API/Dockerfile" type="docker-deploy" factoryName="dockerfile" server-name="Docker">
      <deployment type="dockerfile">
        <settings>
          <option name="imageTag" value="codepace.getwork.api" />
          <option name="containerName" value="codepace.getwork.api" />
          <option name="contextFolderPath" value="C:\Users\jairc\Desktop\Cosa\5to-Ciclo\Aplicaciones web\BACKEND VERDADERO\GetWorkBackend" />
          <option name="portBindings">
            <list>
              <DockerPortBindingImpl>
                <option name="containerPort" value="8080" />
                <option name="hostIp" value="127.0.0.1" />
                <option name="hostPort" value="8080" />
              </DockerPortBindingImpl>
            </list>
          </option>
          <option name="sourceFilePath" value="CodePace.GetWork.API/Dockerfile" />
        </settings>
      </deployment>
      <EXTENSION ID="com.jetbrains.rider.docker.debug" isFastModeEnabled="true" isSslEnabled="false" />
      <method v="2" />
    </configuration>
    <configuration default="true" type="docker-deploy" factoryName="docker-compose.yml" temporary="true">
      <deployment type="docker-compose.yml">
        <settings />
      </deployment>
      <EXTENSION ID="com.jetbrains.rider.docker.debug" isFastModeEnabled="true" isSslEnabled="false" />
      <method v="2" />
    </configuration>
    <configuration default="true" type="docker-deploy" factoryName="dockerfile" temporary="true">
      <deployment type="dockerfile">
        <settings />
      </deployment>
      <EXTENSION ID="com.jetbrains.rider.docker.debug" isFastModeEnabled="true" isSslEnabled="false" />
      <method v="2" />
    </configuration>
    <configuration name="docker-compose.yml: Compose Deployment" type="docker-deploy" factoryName="docker-compose.yml" server-name="Docker">
      <deployment type="docker-compose.yml">
        <settings>
          <option name="sourceFilePath" value="docker-compose.yml" />
        </settings>
      </deployment>
      <EXTENSION ID="com.jetbrains.rider.docker.debug" isFastModeEnabled="true" isSslEnabled="false" />
      <method v="2" />
    </configuration>
    <configuration name="docker-compose.yml: Compose Deployment" type="docker-deploy" factoryName="docker-compose.yml" server-name="Docker">
      <deployment type="docker-compose.yml">
        <settings>
          <option name="sourceFilePath" value="docker-compose.yml" />
        </settings>
      </deployment>
      <EXTENSION ID="com.jetbrains.rider.docker.debug" isFastModeEnabled="true" isSslEnabled="false" />
      <method v="2" />
    </configuration>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="8ff2f0a0-71de-4480-aa89-23de6ff65545" name="Changes" comment="" />
      <created>1719103141495</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1719103141495</updated>
      <workItem from="1719103143239" duration="1277000" />
    </task>
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="UnityProjectConfiguration" hasMinimizedUI="false" />
  <component name="VcsManagerConfiguration">
    <option name="CLEAR_INITIAL_COMMIT_MESSAGE" value="true" />
  </component>
</project>